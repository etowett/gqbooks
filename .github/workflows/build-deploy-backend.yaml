name: GQBooks Backend app deploy to EKS

on:
  workflow_dispatch:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0' # default is latest stable
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Declare docker tag variable
      id: vars
      shell: bash
      run: |
        GIT_HASH=$(git rev-parse --short "${GITHUB_SHA}")
        echo "##[set-output name=docker_tag;]$(echo ${GITHUB_REF##*/}-${GIT_HASH})"

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: gqbooks
        IMAGE_TAG: ${{ steps.vars.outputs.docker_tag }}
      run: |
        docker build -t ${REGISTRY}/${REPOSITORY}:${IMAGE_TAG} .
        docker push ${REGISTRY}/${REPOSITORY}:${IMAGE_TAG}

    - name: Update kube config
      run: |
        aws eks update-kubeconfig --region eu-central-1 --name stage-ello-clstr

    - name: Helm Template
      run: |
        helm template --debug ./k8s/helm-charts/app \
          --version 0.1.0 \
          -n apps \
          --set image.tag=${{ steps.vars.outputs.docker_tag }} \
          -f deploy/stage-backend.yaml

    - name: Deploy to EKS
      run: |
       helm upgrade --install --debug gqbooks ./k8s/helm-charts/app \
        --namespace apps \
        -f deploy/stage-backend.yaml \
        --set image.tag=${{ steps.vars.outputs.docker_tag }} \
        --wait \
        --timeout 600s \
        --create-namespace
